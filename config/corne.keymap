/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 8 7 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 0 12 24 1 13 25 2 14 26 3 15 27 28 29 36 37 38 4 5 16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q             &kp W             &kp E              &kp R         &kp T    &kp Z        &kp U         &kp I               &kp O              &kp P                     &kp BSPC
&mt LCTRL ESC  &hml RIGHT_ALT A  &hml LEFT_META S  &hml LEFT_SHIFT D  &hml LCTRL F  &kp G    &kp H        &hmr RCTRL J  &hmr RIGHT_SHIFT K  &hmr RIGHT_META L  &hmr RIGHT_ALT BACKSLASH  &kp DELETE
&kp LSHFT      &kp Y             &kp X             &kp C              &kp V         &kp B    &kp N        &kp M         &kp COMMA           &kp DOT            &kp SLASH                 &kp ESC
                                                   &mo 3              &mo 1         &mo 2    &lt 2 ENTER  &kp SPACE     &kp LEFT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp LS(N1)  &kp LS(N2)     &kp RA(L)  &kp LS(NUMBER_4)   &kp LS(NUMBER_5)    &kp LS(N6)      &kp LS(RBKT)       &kp LS(N7)  &kp LS(MINUS)  &kp LA(LS(N6))  &trans
&trans     &kp N1      &kp N2         &kp N3     &kp NUMBER_4       &kp NUMBER_5        &kp N6          &kp N7             &kp DE_N8   &kp N9         &kp N0          &trans
&kp GRAVE  &kp RA(N7)  &kp LS(GRAVE)  &kp LA(N)  &kp LS(BACKSLASH)  &kp LS(EQUAL)       &kp RA(LS(N7))  &kp RIGHT_BRACKET  &kp LS(N0)  &trans         &trans          &trans
                                      &trans     &trans             &trans              &trans          &trans             &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans     &trans         &kp RA(E)  &trans  &trans    &trans      &kp LEFT_BRACKET  &trans      &kp SEMI    &trans  &trans
&trans  &kp APOS   &kp MINUS      &trans     &trans  &trans    &kp RA(N5)  &kp RA(NUMBER_6)  &kp LS(N8)  &kp LS(N9)  &trans  &trans
&trans  &kp GRAVE  &kp LS(GRAVE)  &trans     &trans  &trans    &trans      &trans            &kp RA(N8)  &kp RA(N9)  &trans  &kp DE_TILDE
                                  &trans     &trans  &trans    &trans      &trans            &trans
            >;
        };

        navigation {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans  &trans     &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &to 0     &to 4     &trans  &trans     &trans  &trans
                                        &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };

        default_layer_windows {
            bindings = <
&kp TAB        &kp Q             &kp W            &kp E              &kp R         &kp T    &kp Y        &kp U         &kp I               &kp O            &kp P                     &kp BSPC
&mt LCTRL ESC  &hml RIGHT_ALT A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LCTRL F  &kp G    &kp H        &hmr RCTRL J  &hmr RIGHT_SHIFT K  &hmr LEFT_ALT L  &hmr RIGHT_ALT BACKSLASH  &kp DELETE
&kp LSHFT      &kp Z             &kp X            &kp C              &kp V         &kp B    &kp N        &kp M         &kp COMMA           &kp DOT          &kp SLASH                 &kp ESC
                                                  &mo 7              &mo 5         &mo 6    &lt 6 ENTER  &kp SPACE     &kp LEFT_SHIFT
            >;
        };

        lower_layer_windows {
            bindings = <
&trans    &kp LS(N1)    &kp LS(N2)    &kp RA(Q)              &kp LS(NUMBER_4)   &kp LS(NUMBER_5)    &kp LS(N6)     &kp LS(RBKT)       &kp LS(N7)  &kp LS(MINUS)  &kp GRAVE  &trans
&trans    &kp N1        &kp N2        &kp N3                 &kp NUMBER_4       &kp NUMBER_5        &kp N6         &kp N7             &kp DE_N8   &kp N9         &kp N0     &trans
&kp NUBS  &kp RA(NUBS)  &kp LS(NUBS)  &kp RA(RIGHT_BRACKET)  &kp LS(BACKSLASH)  &kp LS(EQUAL)       &kp RA(MINUS)  &kp RIGHT_BRACKET  &kp LS(N0)  &trans         &trans     &trans
                                      &trans                 &trans             &trans              &trans         &trans             &trans
            >;
        };

        raise_layer_windows {
            bindings = <
&trans  &trans     &trans         &kp RA(E)  &trans  &trans    &trans      &kp LEFT_BRACKET  &trans      &kp SEMI          &trans  &trans
&trans  &kp APOS   &kp MINUS      &trans     &trans  &trans    &kp RA(N8)  &kp RA(N9)        &kp LS(N8)  &kp LS(N9)        &trans  &trans
&trans  &kp GRAVE  &kp LS(GRAVE)  &trans     &trans  &trans    &trans      &trans            &kp RA(N7)  &kp RA(NUMBER_0)  &trans  &trans
                                  &trans     &trans  &trans    &trans      &trans            &trans
            >;
        };

        navigation_windows {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans  &trans     &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &to 0     &to 4     &trans  &trans     &trans  &trans
                                        &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };
    };
};
